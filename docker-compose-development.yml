version: '3.4'

services:
  gateway:
    hostname: gateway
    build: 
      context: ./InnoClinic-Gateway-API/GatewayAPI/
      dockerfile: Dockerfile
    ports:
      - 8000:80
      - 8001:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    links:
      - authorization_api
      - profiles_api
      - services_api
      - appointments_api
      - documents_api
      - notification_service
    depends_on:
      - authorization_api
      - profiles_api
      - services_api
      - appointments_api
      - documents_api
      - notification_service

  authorization_api:
    hostname: authorization_api
    build: 
      context: ./InnoClinec-Authorization-API/AuthorizationAPI
      dockerfile: Dockerfile
    ports:
      - 8010:80
      - 8011:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - sql_server_authentication

  profiles_api:
    hostname: profiles_api
    build: 
      context: ./InnoClinic-Profiles-API/ProfilesAPI
      dockerfile: Dockerfile
    ports:
      - 8020:80
      - 8021:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - sql_server_profiles
  
  offices_api:
    hostname: offices_api
    build: 
      context: ./InnoClinic-Offices-API/OfficesAPI
      dockerfile: Dockerfile
    ports:
      - 8030:80
      - 8031:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
  
  services_api:
    hostname: services_api
    build: 
      context: ./InnoClinic-Services-API/ServicesAPI
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8040:80
      - 8041:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - sql_server_services
  
  appointments_api:
    hostname: appointments_api
    build: 
      context: ./InnoClinic-Appointments-API/AppointmentsAPI
      dockerfile: Dockerfile
    ports:
      - 8050:80
      - 8051:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - postgres_appointments
  
  documents_api:
    hostname: documents_api
    build: 
      context: ./InnoClinic-Documents-API/DocumentsAPI
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8060:80
      - 8061:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - azurite
      - postgres_documents
  
  notification_service:
    hostname: notification_service
    build: 
      context: ./InnoClinic-Notifications-Service/NotificationAPI
      dockerfile: Dockerfile
    ports:
      - 8070:80
      - 8071:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - postgres_notifications

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  
  sql_server_authentication:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports:
      - 1401:1433
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    user: root
    volumes:
      - db_authentication:/var/opt/mssql/data

  sql_server_services:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports:
      - 1402:1433
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    user: root
    volumes:
      - db_services:/var/opt/mssql/data
  
  sql_server_profiles:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports:
      - 1403:1433
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    user: root
    volumes:
      - db_profiles:/var/opt/mssql/data

  postgres_appointments:
    image: postgres
    container_name: appointments_pgdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
    ports:
      - 5432:5432
    user: root
    volumes:
      - db_appointments:/var/lib/postgresql/data

  postgres_notifications:
    image: postgres
    container_name: notifications_pgdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
    ports:
      - 5433:5432
    user: root
    volumes:
      - db_notifications:/var/lib/postgresql/data
  
  postgres_documents:
    image: postgres
    container_name: documents_pgdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
    ports:
      - 5434:5432
    user: root
    volumes:
      - db_documents:/var/lib/postgresql/data
    
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
    volumes:
      - db_documents:/var/lib/azurite/data

volumes:
  pgadmin-data:
  db_documents:
  db_notifications:
  db_appointments:
  db_profiles:
  db_services:
  db_authentication:

